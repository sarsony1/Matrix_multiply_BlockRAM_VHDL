------------------------- VERILOG EPP CHECKSUM EXAMPLE -------------------------

INTRODUCTION

The ex_cksum example demonstrates how to wire up the CommFPGA module to a bunch
of registers.


BUILDING FROM SOURCE

You can just run "make PLATFORM=<your platform>" to build. You can see the
supported platforms in ../../platforms/. If yours is not listed, ask about it on
the mailing list.


DETAILED DESCRIPTION

Writes to R1, R2 & R3 are registered and may be read back. Writes to R0 are
displayed on your board's eight LEDs, and added to a 16-bit running checksum
displayed on your board's 7-seg display. Setting the LSB of R1 clears the
checksum. Reads from R0 return the state of your board's eight switches.

Since each channel is implemented using registers, none of the channels ever
block (i.e they always have data available for reading and they always have
room available for writing).

Reads from R0 return the state of the eight switches, which for this demo were
set to SW7=1, SW6=0, SW5=1 etc:

> r0 10
         00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
00000000 AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA ................

Writes to R0 update the checksum:

> w0 12345678

Leaves "0114" on the 7-seg display (0x12 + 0x34 + 0x56 + 0x78 = 0x0114).
